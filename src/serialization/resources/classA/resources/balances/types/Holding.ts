/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { CovalentApi } from "@fern-api/covalent";
import * as core from "../../../../../../core";

export const Holding: core.serialization.ObjectSchema<serializers.classA.Holding.Raw, CovalentApi.classA.Holding> =
    core.serialization.object({
        timestamp: core.serialization.date(),
        quoteRate: core.serialization.property("quote_rate", core.serialization.number()),
        open: core.serialization.lazyObject(async () => (await import("../../../../..")).classA.Balance),
        high: core.serialization.lazyObject(async () => (await import("../../../../..")).classA.Balance),
        low: core.serialization.lazyObject(async () => (await import("../../../../..")).classA.Balance),
        close: core.serialization.lazyObject(async () => (await import("../../../../..")).classA.Balance),
    });

export declare namespace Holding {
    interface Raw {
        timestamp: string;
        quote_rate: number;
        open: serializers.classA.Balance.Raw;
        high: serializers.classA.Balance.Raw;
        low: serializers.classA.Balance.Raw;
        close: serializers.classA.Balance.Raw;
    }
}
